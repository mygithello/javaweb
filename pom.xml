<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.demo</groupId>
  <artifactId>javaweb</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>javaweb Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <spring.version>4.3.5.RELEASE</spring.version>
    <!--虚拟机中私服的地址端口-->
    <nexus_host_port>192.168.8.134:8081</nexus_host_port>

    <cxf.version>3.2.6</cxf.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>

    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.10</version>
    </dependency>

    <!--spring依赖===============start==============================-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--spring依赖===============END=============================-->

    <!--CXF框架，开发webService需要引入的jar==========start========-->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <!--CXF框架，开发webService需要引入的jar==========end========-->

    <!--CXF框架下，发布rest风格的webService需要引入的jar=======start========-->
    <!-- CXF扩展提供者转换json需要默认的一个工具包 -->
    <!--<dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.3.8</version>
    </dependency>-->



    <!-- https://mvnrepository.com/artifact/javax.ws.rs/jsr311-api -->
   <!-- <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
      <version>1.1.1</version>
    </dependency>-->
    <!--CXF框架下，发布rest风格的webService需要引入的jar=======end========-->
    <!-- CXF RS -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <!-- CXF扩展提供者：提供了转换json的接口 -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <!-- CXF扩展提供者转换json需要默认的一个工具包 -->
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.3.8</version>
    </dependency>
    <!-- CXF的rs客户端 -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <!--对象和json字符串相互转化依赖=========start==================-->
    <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>2.4</version>
      <classifier>jdk15</classifier>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.8.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-collections/commons-collections -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/net.sf.ezmorph/ezmorph -->
    <dependency>
      <groupId>net.sf.ezmorph</groupId>
      <artifactId>ezmorph</artifactId>
      <version>1.0.6</version>
    </dependency>
    <!--对象和json字符串相互转化依赖=========end==================-->

    <!--javamail发送邮件依赖==========start==============-->
    <!-- https://mvnrepository.com/artifact/javax.mail/mail -->
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.activation/activation -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.sun.mail/smtp -->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>smtp</artifactId>
      <version>1.5.2</version>
    </dependency>
    <!--javamail发送邮件依赖==========end==============-->

    <!--生成word文档===========start==============-->
    <!-- https://mvnrepository.com/artifact/freemarker/freemarker -->
    <dependency>
      <groupId>freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.8</version>
    </dependency>
    <!--生成word文档===========end==============-->

    <!--生成二维码===========start=====jar引入到仓库中=========-->
    <dependency>
      <groupId>jyc.thirdparty</groupId>
      <artifactId>QRCode</artifactId>
      <version>1.0</version>
    </dependency>

    <!--生成二维码===========end==============-->

    <!--Jedis 配置=======================start==========================-->
    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>2.6.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
    </dependency>

    <!--Jedis 配置=======================end==========================-->


  </dependencies>

  <repositories>

    <!-- 私服的中心仓库============先从本地==》私服==》远程仓库==》===========================================start===========-->
    <repository>
      <id>maven-central</id>
      <name>maven-central</name>
      <url>http://${nexus_host_port}/repository/maven-central/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <!-- 私服的中心仓库=====jar包存======本地《===私服《==远程仓库《===========================================end============-->

    <!-- 私服的第三方jar仓库=============第三方hosted仓库==========将第三方jar上传到hosted=========================start=================-->
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>public</id>
      <name>public</name>
      <url>http://${nexus_host_port}/repository/java_thirdparty_jar/</url>
    </repository>
    <!-- 私服的第三方jar仓库====寻找jar顺序===本地==》私服==》远程======不配置私服中心仓库的话，不会同步寻找到的jar不会同步到私服，仅仅放到了本地===end-->

  </repositories>

  <!-- 私服的配置，暂时这样配置=========1======原理待寻============================start===========-->
  <distributionManagement>
    <snapshotRepository>
      <id>nexus</id>
      <name>Nexus Snapshot</name>
      <url>http://${nexus_host_port}/repository/maven-snapshots/</url>
    </snapshotRepository>
    <site>
      <id>nexus</id>
      <name>Nexus Sites</name>
      <url>dav:http://${nexus_host_port}/repository/maven-snapshots/</url>
    </site>
  </distributionManagement>
  <!-- 私服的配置，暂时这样配置=========2========原理待寻==========================start===========-->




  <build>
    <finalName>javaweb</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->

      <!-- 私服的配置，暂时这样配置=========2======原理待寻============================start===========-->
      <plugins>
        <!-- 打jar包插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <excludes>
              <exclude>**/*.properties</exclude>
            </excludes>
          </configuration>
        </plugin>

        <!-- 打包源码插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <configuration>
            <attach>true</attach>
          </configuration>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- 私服的配置，暂时这样配置=========2======原理待寻============================嗯对===========-->


      </plugins>
    </pluginManagement>
  </build>
</project>
